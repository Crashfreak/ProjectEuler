package crashfreak.problems;

import crashfreak.EulerProblem;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

 By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 *
 * SOLVED
 * @author Michael Cuthbert on 7/18/14.
 */
public class Problem2 extends EulerProblem {
    @Override
    public void run() {
        int sum = 0;
        int previousFibNum = 1;
        int fibNum = 2;
        do {
            if (fibNum % 2 == 0) {
                sum += fibNum;
            }
            int tempFibNum = fibNum;
            fibNum = previousFibNum + fibNum;
            previousFibNum = tempFibNum;
        } while (fibNum < 4000000);
        answer(sum);
    }
}
